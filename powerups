# Define powerup types
POWERUP_NAMES = {
    1: "Color Change", #this doesnt work properly
    3: "Teleport", #this doesnt work properly
    4: "Length Multiply",
    5: "Speed Up"
}

# Function to draw powerup
def draw_powerup(powerup):
    pygame.draw.rect(screen, YELLOW, (powerup[0], powerup[1], CELL_SIZE, CELL_SIZE))

# Function to generate random powerup
def generate_random_powerup():
    powerup_type = random.choice([1, 3, 4, 5])  # Exclude background change power-up
    powerup_pos = generate_random_position()
    return powerup_type, powerup_pos

# Function to handle power-up effects
def apply_powerup(snake, powerup_type):
    if powerup_type == 1:  # Color Change (cant get it to function)
        snake_color = (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))
        return snake_color
    elif powerup_type == 3:  # Teleport (cant get it to function)
        return random.choice([(0, snake[0][1]), (WIDTH - CELL_SIZE, snake[0][1]), (snake[0][0], 0), (snake[0][0], HEIGHT - CELL_SIZE)])
    elif powerup_type == 4:  # Length Multiply
        snake.extend([snake[-1]] * 3)
        return snake
    elif powerup_type == 5:  # Speed Up
        return CELL_SIZE * 2

    font = pygame.font.Font(None, 36)  # Font for displaying power-up name
    powerup_text = None
    powerup_end_time = 0

    next_powerup_time = time.time() + 30  # Set the time for the next power-up appearance


        # Check for collision with powerup
        if head == powerup_pos:
            powerup_active = False
            powerup_type, _ = generate_random_powerup()
            powerup_name = POWERUP_NAMES.get(powerup_type, "Unknown Power-up")
            powerup_text = font.render(f"Power-up: {powerup_name}", True, WHITE)
            powerup_end_time = time.time() + 5
            snake_color = apply_powerup(snake, powerup_type)

        # Drawing powerup
        if powerup_active:
            draw_powerup(powerup_pos)

        # Drawing power-up text
        if powerup_text is not None and time.time() < powerup_end_time:
            screen.blit(powerup_text, (10, 10))
